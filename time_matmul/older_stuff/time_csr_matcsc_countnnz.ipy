import sys
from try_csr_matcsc import *
from numpy.testing import assert_array_almost_equal
import matplotlib.pyplot as plt
plt.ion()

def count_nnz(N=10, colnnz=1, K=10000, M=10):
    rng = np.random.default_rng(42)
    A = sp.sparse.random(M, K, density=colnnz/K, random_state=rng).tocsr()
    B = sp.sparse.random(K, N, density=colnnz/K, random_state=rng).tocsc()
    NMnnz = []
    Ast = 0
    for Aend in A.indptr[1:]:
        NMnnz.append(Arownnz:=[])
        Arow = set(A.indices[Ast:Aend])
        Bst = 0
        for Bend in B.indptr[1:]:
            Bcol = B.indices[Bst:Bend]
            Arownnz.append(sum(1 for i in Bcol if i in Arow))
            Bst = Bend
        Ast = Aend
    NMnnz = np.array(NMnnz)
    print(f"{NMnnz.shape=}")
    print(f"{NMnnz=}")
    return NMnnz

N=5
colnnz=6400
K=1100000
M=100

for M in [1, 2, 4, 8, 16, 32]:
    for N in [1, 2, 4, 8, 16, 32]:
        for colnnz in [2**i for i in range(13)]:
            _ = count_nnz(N=N, colnnz=colnnz, K=K, M=M)
